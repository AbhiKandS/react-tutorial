{"ast":null,"code":"var _jsxFileName = \"/Users/abhijithks/tmpZsh/ticTacToe-React/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Game() {\n  _s();\n  let temp = Array(3).fill(null).map(() => Array(3).fill(null));\n  const [boardArray, setBoardArray] = useState(temp);\n  const players = [\"X\", \"O\"];\n  const [player, setPlayer] = useState(\"X\");\n  const [playerState, setPlayerState] = useState(\"Current\");\n  function handleclick(i, j) {\n    if (boardArray[i][j] != null || playerState != \"Current\") return;\n    let newboard = boardArray.slice();\n    newboard[i][j] = player;\n    setBoardArray(newboard);\n    if (calcWinner(i, j) === true) setPlayerState(\"Winner !!!\");else player === \"X\" ? setPlayer(\"O\") : setPlayer(\"X\");\n  }\n  function calcWinner(row, col) {\n    let curr = boardArray[row][col];\n    let size = boardArray.length;\n    let check = 0;\n    let rowWin, colWin, diag1Win, diag2Win;\n    rowWin = colWin = diag1Win = diag2Win = true;\n    for (let i = 0; i < size; i++) {\n      if (curr !== boardArray[row][i]) rowWin = false;\n      if (curr !== boardArray[i][col]) colWin = false;\n      if (curr !== boardArray[i][i]) diag1Win = false;\n      if (curr !== boardArray[i][size - i - 1]) diag2Win = false;\n      if (!(rowWin || colWin || diag1Win || diag2Win)) return false;\n    }\n    return rowWin || colWin || diag1Win || diag2Win;\n  }\n  function displayWinner() {\n    setPlayerState(\"Winner\");\n  }\n  function resetBoard() {\n    setBoardArray(temp);\n    setPlayer(\"X\");\n    setPlayerState(\"Current\");\n  }\n  function boardToPrev() {}\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      id: \"playerState\",\n      children: [playerState, \" : \", player]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), Array(3).fill(null).map((_, i) => /*#__PURE__*/_jsxDEV(Row, {\n      rowNum: i,\n      rowArray: boardArray[i],\n      onClick: handleclick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"AjnsDoALIGua/LppVmsHvoram6c=\");\n_c = Game;\nfunction Board({\n  size,\n  boardArray,\n  onClick\n}) {\n  {\n    Array({\n      size\n    }).fill(null).map((_, i) => /*#__PURE__*/_jsxDEV(Row, {\n      rowNum: i,\n      rowArray: boardArray[i],\n      onClick: handleclick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this));\n  }\n}\n\n//i = row, j = col\n_c2 = Board;\nfunction Row({\n  size,\n  rowNum,\n  rowArray,\n  onClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-row\",\n    children: Array(3).fill(null).map((_, i) => /*#__PURE__*/_jsxDEV(Square, {\n      rowNum: rowNum,\n      colNum: i,\n      value: rowArray[i],\n      onClick: onClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_c3 = Row;\nfunction Square({\n  rowNum,\n  colNum,\n  value,\n  onClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: () => onClick(rowNum, colNum),\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_c4 = Square;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Game\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Row\");\n$RefreshReg$(_c4, \"Square\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Game","_s","temp","Array","fill","map","boardArray","setBoardArray","players","player","setPlayer","playerState","setPlayerState","handleclick","i","j","newboard","slice","calcWinner","row","col","curr","size","length","check","rowWin","colWin","diag1Win","diag2Win","displayWinner","resetBoard","boardToPrev","children","id","fileName","_jsxFileName","lineNumber","columnNumber","_","Row","rowNum","rowArray","onClick","_c","Board","_c2","className","Square","colNum","value","_c3","_c4","$RefreshReg$"],"sources":["/Users/abhijithks/tmpZsh/ticTacToe-React/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nexport default function Game() {\n  let temp = Array(3).fill(null).map( () => Array(3).fill(null));\n  const [boardArray, setBoardArray] = useState(temp);\n  const players = [\"X\", \"O\"];\n  const [player, setPlayer] = useState(\"X\");\n  const [playerState, setPlayerState] = useState(\"Current\")\n\n  function handleclick(i, j) {\n    if (boardArray[i][j] != null || playerState != \"Current\") return;\n\n    let newboard = boardArray.slice();\n    newboard[i][j] = player;\n    setBoardArray(newboard);\n    \n    if (calcWinner(i, j) === true) setPlayerState(\"Winner !!!\");\n    \n    else (player === \"X\") ? setPlayer(\"O\") : setPlayer(\"X\");\n  }\n\n  function calcWinner(row, col) {\n    let curr = boardArray[row][col];\n    let size = boardArray.length;\n    let check = 0\n    let rowWin, colWin, diag1Win, diag2Win;\n    rowWin = colWin = diag1Win = diag2Win = true;\n    for (let i = 0; i < size; i++) {\n      if (curr !== boardArray[row][i]) rowWin = false;\n      if (curr !== boardArray[i][col]) colWin = false;\n      if (curr !== boardArray[i][i]) diag1Win = false;\n      if (curr !== boardArray[i][size - i - 1]) diag2Win = false;\n\n      if (!(rowWin || colWin || diag1Win || diag2Win)) return false;\n    }\n\n    return  rowWin || colWin || diag1Win || diag2Win;\n  }\n\n  function displayWinner() {\n    setPlayerState(\"Winner\");\n  }\n  \n  function resetBoard() {\n    setBoardArray(temp);\n    setPlayer(\"X\");\n    setPlayerState(\"Current\");\n  }\n  \n  function boardToPrev() {\n\n  }\n\n  return(\n    <div>\n      <h3 id=\"playerState\">{playerState} : {player}</h3>\n      {Array(3).fill(null).map( (_,i) => (\n        <Row rowNum={i} rowArray={boardArray[i]} onClick={handleclick} />\n      ))}\n\n\n    </div>\n  );\n}\n\nfunction Board({ size, boardArray, onClick }) {\n  {\n    Array({size}).fill(null).map((_, i) => (\n      <Row rowNum={i} rowArray={boardArray[i]} onClick={handleclick} />\n    ))\n  }\n}\n\n//i = row, j = col\nfunction Row({size, rowNum, rowArray, onClick }) {\n  return (\n    <div className=\"board-row\">\n      {Array(3).fill(null).map( (_,i) =>\n        <Square rowNum={rowNum} colNum={i} value={rowArray[i]} onClick={onClick} />\n      )}\n    </div>\n  );\n}\n\nfunction Square({rowNum, colNum, value, onClick}) {\n  return (\n    <button className=\"square\" onClick={() => onClick(rowNum, colNum)}>\n      {value}\n    </button>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}