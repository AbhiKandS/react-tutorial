{"ast":null,"code":"var _jsxFileName = \"/Users/abhijithks/tmpZsh/ticTacToe-React/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Board from \"./Board.js\";\nimport GameHistory from \"./GameHistory.js\";\nimport { updateHistory } from \"./GameHistory.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Game() {\n  _s();\n  const size = 3;\n  const players = [\"X\", \"O\"];\n  let temp = Array(size).fill(null).map(() => Array(size).fill(null));\n  const [boardArray, setBoardArray] = useState(temp);\n  const [player, setPlayer] = useState(0);\n  const [playerState, setPlayerState] = useState(\"Next Player\");\n  const [HistoryArray, setHistoryArray] = useState([]);\n  let setHide;\n  function parentFeed(fun) {\n    setHide = fun;\n  }\n  function handleclick(i, j) {\n    if (boardArray[i][j] != null || playerState != \"Next Player\") return;\n    let newboard = boardArray.slice();\n    newboard[i][j] = players[player];\n    setBoardArray(newboard);\n    if (calcWinner(i, j) === true) setPlayerState(\"Winner !!!\");else setPlayer((player + 1) % players.length);\n    updateHistory(boardArray, player);\n  }\n  function calcWinner(row, col) {\n    let curr = boardArray[row][col];\n    let size = boardArray.length;\n    let check = 0;\n    let rowWin, colWin, diag1Win, diag2Win;\n    rowWin = colWin = diag1Win = diag2Win = true;\n    for (let i = 0; i < size; i++) {\n      if (curr !== boardArray[row][i]) rowWin = false;\n      if (curr !== boardArray[i][col]) colWin = false;\n      if (curr !== boardArray[i][i]) diag1Win = false;\n      if (curr !== boardArray[i][size - i - 1]) diag2Win = false;\n      if (!(rowWin || colWin || diag1Win || diag2Win)) return false;\n    }\n    return rowWin || colWin || diag1Win || diag2Win;\n  }\n  function updateHistory(boardArray, player) {\n    let newArray = Array.from(HistoryArray);\n    console.log(HistoryArray);\n    newArray.push({\n      'player': player,\n      'board': structuredClone(boardArray)\n    });\n    console.log(newArray);\n    setHistoryArray(newArray);\n  }\n  function resetBoard() {\n    setBoardArray(temp);\n    setPlayer(0);\n    setPlayerState(\"Next Player\");\n    setHistoryArray([]);\n    setHide(-1);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      id: \"playerState\",\n      children: [playerState, \" : \", players[player]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      size: size,\n      boardArray: boardArray,\n      onClick: handleclick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetBoard,\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameHistory, {\n      HistoryArray: HistoryArray,\n      setBoard: setBoardArray,\n      setPlayer: setPlayer,\n      setPlayerState: setPlayerState,\n      players: players.slice(),\n      setHistoryArray: setHistoryArray,\n      parentFeed: parentFeed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"qo7l7LaUsVDlWEqVZZ/+EO6RJdY=\");\n_c = Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["useState","Board","GameHistory","updateHistory","jsxDEV","_jsxDEV","Game","_s","size","players","temp","Array","fill","map","boardArray","setBoardArray","player","setPlayer","playerState","setPlayerState","HistoryArray","setHistoryArray","setHide","parentFeed","fun","handleclick","i","j","newboard","slice","calcWinner","length","row","col","curr","check","rowWin","colWin","diag1Win","diag2Win","newArray","from","console","log","push","structuredClone","resetBoard","children","id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","setBoard","_c","$RefreshReg$"],"sources":["/Users/abhijithks/tmpZsh/ticTacToe-React/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport Board from \"./Board.js\";\nimport GameHistory from \"./GameHistory.js\";\nimport { updateHistory } from \"./GameHistory.js\";\n\nexport default function Game() {\n  const size = 3;\n  const players = [\"X\", \"O\"];\n  let temp = Array(size).fill(null).map( () => Array(size).fill(null));\n  const [boardArray, setBoardArray] = useState(temp);\n  const [player, setPlayer] = useState(0);\n  const [playerState, setPlayerState] = useState(\"Next Player\")\n  const [HistoryArray, setHistoryArray] = useState([]);\n  let setHide;\n\n  function parentFeed(fun) {\n    setHide = fun;\n  }\n\n  function handleclick(i, j) {\n    if (boardArray[i][j] != null || playerState != \"Next Player\") return;\n\n    let newboard = boardArray.slice();\n    newboard[i][j] = players[player];\n    setBoardArray(newboard);\n    \n    if (calcWinner(i, j) === true) setPlayerState(\"Winner !!!\");\n    else setPlayer((player + 1) % players.length);\n\n    updateHistory(boardArray, player);\n  }\n\n  function calcWinner(row, col) {\n    let curr = boardArray[row][col];\n    let size = boardArray.length;\n    let check = 0\n    let rowWin, colWin, diag1Win, diag2Win;\n    rowWin = colWin = diag1Win = diag2Win = true;\n    for (let i = 0; i < size; i++) {\n      if (curr !== boardArray[row][i]) rowWin = false;\n      if (curr !== boardArray[i][col]) colWin = false;\n      if (curr !== boardArray[i][i]) diag1Win = false;\n      if (curr !== boardArray[i][size - i - 1]) diag2Win = false;\n\n      if (!(rowWin || colWin || diag1Win || diag2Win)) return false;\n    }\n\n    return  rowWin || colWin || diag1Win || diag2Win;\n  }\n\n  function updateHistory(boardArray, player) {\n    let newArray = Array.from(HistoryArray);\n    console.log(HistoryArray);\n    \n    newArray.push(\n      {\n        'player': player,\n        'board': structuredClone(boardArray)\n      }\n    )\n    console.log(newArray);\n    \n    setHistoryArray(newArray);\n  }\n\n  function resetBoard() {\n    setBoardArray(temp);\n    setPlayer(0);\n    setPlayerState(\"Next Player\");\n    setHistoryArray([]);\n    setHide(-1);\n  }\n  \n\n  return(\n    <div>\n      <h3 id=\"playerState\">{playerState} : {players[player]}</h3>\n      <Board size={size} boardArray={boardArray} onClick={handleclick} />\n\n      <br />\n      <button onClick={resetBoard}>New Game</button>\n\n      <br />\n      <GameHistory\n        HistoryArray={HistoryArray}\n        setBoard={setBoardArray}\n        setPlayer={setPlayer}\n        setPlayerState={setPlayerState}\n        players={players.slice()}\n        setHistoryArray={setHistoryArray}\n        parentFeed={parentFeed}\n      />\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}