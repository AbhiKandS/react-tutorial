{"ast":null,"code":"var _jsxFileName = \"/Users/abhijithks/tmpZsh/ticTacToe-React/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport GameHistory from \"./GameHistory.js\";\nimport { updateHistory } from \"./GameHistory.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Game() {\n  _s();\n  let temp = Array(3).fill(null).map(() => Array(3).fill(null));\n  const [boardArray, setBoardArray] = useState(temp);\n  const players = [\"X\", \"O\"];\n  const [player, setPlayer] = useState(0);\n  const [playerState, setPlayerState] = useState(\"Current\");\n  const size = 3;\n  const [HistoryArray, setHistoryArray] = useState([]);\n  function handleclick(i, j) {\n    if (boardArray[i][j] != null || playerState != \"Current\") return;\n    let newboard = boardArray.slice();\n    newboard[i][j] = players[player];\n    setBoardArray(newboard);\n    if (calcWinner(i, j) === true) setPlayerState(\"Winner !!!\");else setPlayer((player + 1) % players.length);\n    updateHistory(boardArray, player);\n  }\n  function calcWinner(row, col) {\n    let curr = boardArray[row][col];\n    let size = boardArray.length;\n    let check = 0;\n    let rowWin, colWin, diag1Win, diag2Win;\n    rowWin = colWin = diag1Win = diag2Win = true;\n    for (let i = 0; i < size; i++) {\n      if (curr !== boardArray[row][i]) rowWin = false;\n      if (curr !== boardArray[i][col]) colWin = false;\n      if (curr !== boardArray[i][i]) diag1Win = false;\n      if (curr !== boardArray[i][size - i - 1]) diag2Win = false;\n      if (!(rowWin || colWin || diag1Win || diag2Win)) return false;\n    }\n    return rowWin || colWin || diag1Win || diag2Win;\n  }\n  function updateHistory(boardArray, player) {\n    let newArray = Array.from(HistoryArray);\n    newArray.push({\n      'player': player,\n      'board': boardArray\n    });\n    setHistoryArray(newArray);\n  }\n  function resetBoard() {\n    setBoardArray(temp);\n    setPlayer(0);\n    setPlayerState(\"Current\");\n    setHistoryArray([]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      id: \"playerState\",\n      children: [playerState, \" : \", players[player]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      size: size,\n      boardArray: boardArray,\n      onClick: handleclick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetBoard,\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameHistory, {\n      HistoryArray: HistoryArray,\n      setBoard: setBoardArray,\n      setPlayer: setPlayer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"/RPeuX4B4f/hFZUO4tjc4SklINE=\");\n_c = Game;\nfunction Board({\n  size,\n  boardArray,\n  onClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Array(size).fill(null).map((_, i) => /*#__PURE__*/_jsxDEV(Row, {\n      size: size,\n      rowNum: i,\n      rowArray: boardArray[i],\n      onClick: onClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 3\n  }, this);\n}\n\n//i = row, j = col\n_c2 = Board;\nfunction Row({\n  size,\n  rowNum,\n  rowArray,\n  onClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-row\",\n    children: Array(size).fill(null).map((_, i) => /*#__PURE__*/_jsxDEV(Square, {\n      rowNum: rowNum,\n      colNum: i,\n      value: rowArray[i],\n      onClick: onClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_c3 = Row;\nfunction Square({\n  rowNum,\n  colNum,\n  value,\n  onClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: () => onClick(rowNum, colNum),\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_c4 = Square;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Game\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Row\");\n$RefreshReg$(_c4, \"Square\");","map":{"version":3,"names":["useState","GameHistory","updateHistory","jsxDEV","_jsxDEV","Game","_s","temp","Array","fill","map","boardArray","setBoardArray","players","player","setPlayer","playerState","setPlayerState","size","HistoryArray","setHistoryArray","handleclick","i","j","newboard","slice","calcWinner","length","row","col","curr","check","rowWin","colWin","diag1Win","diag2Win","newArray","from","push","resetBoard","children","id","fileName","_jsxFileName","lineNumber","columnNumber","Board","onClick","setBoard","_c","_","Row","rowNum","rowArray","_c2","className","Square","colNum","value","_c3","_c4","$RefreshReg$"],"sources":["/Users/abhijithks/tmpZsh/ticTacToe-React/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport GameHistory from \"./GameHistory.js\";\nimport { updateHistory } from \"./GameHistory.js\";\n\nexport default function Game() {\n  let temp = Array(3).fill(null).map( () => Array(3).fill(null));\n  const [boardArray, setBoardArray] = useState(temp);\n  const players = [\"X\", \"O\"];\n  const [player, setPlayer] = useState(0);\n  const [playerState, setPlayerState] = useState(\"Current\")\n  const size = 3;\n  const [HistoryArray, setHistoryArray] = useState([]);\n\n  function handleclick(i, j) {\n    if (boardArray[i][j] != null || playerState != \"Current\") return;\n\n    let newboard = boardArray.slice();\n    newboard[i][j] = players[player];\n    setBoardArray(newboard);\n    \n    if (calcWinner(i, j) === true) setPlayerState(\"Winner !!!\");\n    else setPlayer((player + 1) % players.length);\n\n    updateHistory(boardArray, player);\n  }\n\n  function calcWinner(row, col) {\n    let curr = boardArray[row][col];\n    let size = boardArray.length;\n    let check = 0\n    let rowWin, colWin, diag1Win, diag2Win;\n    rowWin = colWin = diag1Win = diag2Win = true;\n    for (let i = 0; i < size; i++) {\n      if (curr !== boardArray[row][i]) rowWin = false;\n      if (curr !== boardArray[i][col]) colWin = false;\n      if (curr !== boardArray[i][i]) diag1Win = false;\n      if (curr !== boardArray[i][size - i - 1]) diag2Win = false;\n\n      if (!(rowWin || colWin || diag1Win || diag2Win)) return false;\n    }\n\n    return  rowWin || colWin || diag1Win || diag2Win;\n  }\n\n  function updateHistory(boardArray, player) {\n    let newArray = Array.from(HistoryArray);\n    newArray.push(\n      {\n        'player': player,\n        'board': boardArray\n      }\n    )\n    setHistoryArray(newArray);\n  }\n\n  function resetBoard() {\n    setBoardArray(temp);\n    setPlayer(0);\n    setPlayerState(\"Current\");\n    setHistoryArray([]);\n  }\n  \n\n  return(\n    <div>\n      <h3 id=\"playerState\">{playerState} : {players[player]}</h3>\n      <Board size={size} boardArray={boardArray} onClick={handleclick} />\n\n      <br />\n      <button onClick={resetBoard}>New Game</button>\n\n      <br />\n      <GameHistory HistoryArray={HistoryArray} setBoard={setBoardArray} setPlayer={setPlayer}/>\n    </div>\n  );\n}\n\nfunction Board({ size, boardArray, onClick }) {\n  return (\n  <div>\n    {\n    Array(size).fill(null).map((_, i) => (\n      <Row size={size} rowNum={i} rowArray={boardArray[i]} onClick={onClick} />\n    ))}\n  </div>\n  );\n}\n\n//i = row, j = col\nfunction Row({ size, rowNum, rowArray, onClick }) {\n  return (\n    <div className=\"board-row\">\n      {Array(size).fill(null).map( (_,i) =>\n        <Square rowNum={rowNum} colNum={i} value={rowArray[i]} onClick={onClick} />\n      )}\n    </div>\n  );\n}\n\nfunction Square({ rowNum, colNum, value, onClick }) {\n  return (\n    <button className=\"square\" onClick={() => onClick(rowNum, colNum)}>\n      {value}\n    </button>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}