{"ast":null,"code":"var _jsxFileName = \"/Users/abhijithks/tmpZsh/ticTacToe-React/src/GameHistory.js\",\n  _s = $RefreshSig$();\nimport { use, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GameHistory({\n  HistoryArray,\n  setBoard,\n  setPlayer,\n  setPlayerState,\n  players,\n  setHistoryArray,\n  newHide\n}) {\n  _s();\n  const [hide, setHide] = useState(-1);\n  let tmp = HistoryArray[HistoryArray.length - 1];\n  let currBoard = [];\n  let nextPlayer;\n  if (tmp) {\n    currBoard = tmp.board;\n    nextPlayer = (tmp.player + 1) % players.length;\n  }\n  function toggleBoard(historyIdx) {\n    if (hide === historyIdx) {\n      setHide(-1);\n      setBoard(currBoard);\n      setPlayer(nextPlayer);\n      setPlayerState(\"Next Player\");\n    } else {\n      setHide(historyIdx);\n      setBoard(HistoryArray[historyIdx].board);\n      setPlayer(HistoryArray[historyIdx].player);\n      setPlayerState(\"Last Player\");\n    }\n  }\n  function undoBoard(historyIdx) {\n    let i = historyIdx;\n    let newHistory = HistoryArray.slice(0, i + 1);\n    let latestGame = newHistory[newHistory.length - 1];\n    setHistoryArray(newHistory);\n    setBoard(structuredClone(latestGame.board));\n    setPlayer(latestGame.player);\n    setPlayerState(\"Next Player\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"ol\", {\n    children: [newHide(setHide), \";\", Array(HistoryArray.length).fill(null).map((_, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\"game \", i + 1, /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"show\",\n        \"data-key\": i,\n        onClick: () => toggleBoard(i),\n        children: hide === i ? \"hide\" : \"show\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"update\",\n        \"data-key\": i,\n        onClick: () => undoBoard(i),\n        children: \"update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 29\n      }, this)]\n    }, i + 1, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(GameHistory, \"RpGXyRoi5gsDZHH2oRcm7YkSl6Y=\");\n_c = GameHistory;\nvar _c;\n$RefreshReg$(_c, \"GameHistory\");","map":{"version":3,"names":["use","useState","jsxDEV","_jsxDEV","GameHistory","HistoryArray","setBoard","setPlayer","setPlayerState","players","setHistoryArray","newHide","_s","hide","setHide","tmp","length","currBoard","nextPlayer","board","player","toggleBoard","historyIdx","undoBoard","i","newHistory","slice","latestGame","structuredClone","children","Array","fill","map","_","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/abhijithks/tmpZsh/ticTacToe-React/src/GameHistory.js"],"sourcesContent":["import { use, useState } from \"react\"\n\n\nexport default function GameHistory({ HistoryArray, setBoard, setPlayer, setPlayerState, players, setHistoryArray, newHide}) {\n    const [hide, setHide] = useState(-1);\n    let tmp = HistoryArray[HistoryArray.length-1];\n    let currBoard = [];\n    let nextPlayer;\n    if (tmp) { \n        currBoard = tmp.board; \n        nextPlayer = (tmp.player + 1) % players.length;\n    }\n    \n    function toggleBoard(historyIdx) {\n        if (hide === historyIdx) {\n            setHide(-1);\n            setBoard(currBoard);\n            setPlayer(nextPlayer);\n            setPlayerState(\"Next Player\");\n        }\n        else {\n            setHide(historyIdx);\n            setBoard(HistoryArray[historyIdx].board);\n            setPlayer(HistoryArray[historyIdx].player);\n            setPlayerState(\"Last Player\");\n        }\n    }\n\n    function undoBoard(historyIdx) {\n        let i = historyIdx;\n        let newHistory = HistoryArray.slice(0, i+1);\n        let latestGame = newHistory[newHistory.length - 1];\n        setHistoryArray(newHistory);\n        setBoard(structuredClone(latestGame.board));\n        setPlayer(latestGame.player);\n        setPlayerState(\"Next Player\");\n    }\n\n    return (\n        <ol>\n            {newHide(setHide)};\n            \n            {\n                Array(HistoryArray.length).fill(null).map(\n                    (_,i) => (\n                        <li key={i+1}>\n                            game {i+1} \n                            <button className=\"show\" data-key={i} onClick={() => (toggleBoard(i))} >\n                                {(hide === i) ? \"hide\" : \"show\"}\n                            </button>\n                            <button className=\"update\" data-key={i} onClick={ () => (undoBoard(i))}>\n                                update\n                            </button>\n                        </li>\n                    )\n                )\n            }\n        </ol>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}