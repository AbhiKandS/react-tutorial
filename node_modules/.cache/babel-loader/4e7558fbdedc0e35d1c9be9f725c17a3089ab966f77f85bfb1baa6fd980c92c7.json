{"ast":null,"code":"var _jsxFileName = \"/Users/abhijithks/tmpZsh/ticTacToe-React/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Board() {\n  _s();\n  let temp = Array(3).fill(null).map(() => Array(3).fill(null));\n  const [boardArray, setBoardArray] = useState(temp);\n  const players = [\"X\", \"O\"];\n  const [player, setPlayer] = useState(\"X\");\n  const [playerState, setPlayerState] = useState(\"Current\");\n  function handleclick(i, j) {\n    if (boardArray[i][j] != null || playerState != \"Current\") return;\n    let newboard = boardArray.slice();\n    newboard[i][j] = player;\n    setBoardArray(newboard);\n    if (calcWinner(i, j) === true) setPlayerState(\"Winner !!!\");else player === \"X\" ? setPlayer(\"O\") : setPlayer(\"X\");\n  }\n  function calcWinner(row, col) {\n    let curr = boardArray[row][col];\n    let size = boardArray.length;\n    let check = 0;\n    for (let i = 0; i < size; i++) {\n      if (curr === boardArray[row][i]) {\n        check++;\n        if (check == size) return true;\n      } else {\n        check = 0;\n        break;\n      }\n    }\n    for (let i = 0; i < size; i++) {\n      if (curr === boardArray[i][col]) {\n        check++;\n        if (check == size) return true;\n      } else {\n        check = 0;\n        break;\n      }\n    }\n    if (row === col) {\n      for (let i = 0; i < size; i++) {\n        if (curr === boardArray[i][i]) {\n          check++;\n          if (check == size) return true;\n        } else {\n          check = 0;\n          break;\n        }\n      }\n    }\n    if (col === size - row - 1) {\n      for (let i = 0; i < size; i++) {\n        if (curr === boardArray[i][size - i - 1]) {\n          check++;\n          if (check == size) return true;\n        } else {\n          check = 0;\n          break;\n        }\n      }\n    }\n    return false;\n  }\n  function displayWinner() {\n    setPlayerState(\"Winner\");\n  }\n  function resetBoard() {\n    setBoardArray(temp);\n    setPlayer(\"X\");\n    setPlayerState(\"Current\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [playerState, \" : \", player]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), Array(3).fill(null).map((_, i) => /*#__PURE__*/_jsxDEV(Row, {\n      rowNum: i,\n      rowArray: boardArray[i],\n      onClick: handleclick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetBoard,\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n//i = row, j = col\n_s(Board, \"AjnsDoALIGua/LppVmsHvoram6c=\");\n_c = Board;\nfunction Row({\n  rowNum,\n  rowArray,\n  onClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-row\",\n    children: Array(3).fill(null).map((_, i) => /*#__PURE__*/_jsxDEV(Square, {\n      rowNum: rowNum,\n      colNum: i,\n      value: rowArray[i],\n      onClick: onClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Row;\nfunction Square({\n  rowNum,\n  colNum,\n  value,\n  onClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: () => onClick(rowNum, colNum),\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n_c3 = Square;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Board\");\n$RefreshReg$(_c2, \"Row\");\n$RefreshReg$(_c3, \"Square\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Board","_s","temp","Array","fill","map","boardArray","setBoardArray","players","player","setPlayer","playerState","setPlayerState","handleclick","i","j","newboard","slice","calcWinner","row","col","curr","size","length","check","displayWinner","resetBoard","children","fileName","_jsxFileName","lineNumber","columnNumber","_","Row","rowNum","rowArray","onClick","_c","className","Square","colNum","value","_c2","_c3","$RefreshReg$"],"sources":["/Users/abhijithks/tmpZsh/ticTacToe-React/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nexport default function Board() {\n  let temp = Array(3).fill(null).map( () => Array(3).fill(null));\n  const [boardArray, setBoardArray] = useState(temp);\n  const players = [\"X\", \"O\"];\n  const [player, setPlayer] = useState(\"X\");\n  const [playerState, setPlayerState] = useState(\"Current\")\n\n  function handleclick(i, j) {\n    if (boardArray[i][j] != null || playerState != \"Current\") return;\n\n    let newboard = boardArray.slice();\n    newboard[i][j] = player;\n    setBoardArray(newboard);\n    \n    if (calcWinner(i, j) === true) setPlayerState(\"Winner !!!\");\n    \n    else (player === \"X\") ? setPlayer(\"O\") : setPlayer(\"X\");\n  }\n\n  function calcWinner(row, col) {\n    let curr = boardArray[row][col];\n    let size = boardArray.length;\n    let check = 0\n    for (let i = 0; i < size; i++) {\n      if (curr === boardArray[row][i]) {\n        check++;\n        if (check == size) return true;\n      }\n      else {\n        check = 0;\n        break;\n      }\n    }\n\n    for (let i = 0; i < size; i++) {\n      if (curr === boardArray[i][col]) {\n        check++;\n        if (check == size) return true;\n      }\n      else {\n        check = 0;\n        break;\n      }\n    }\n\n    if (row === col) {\n      for (let i = 0; i < size; i++) {\n        if (curr === boardArray[i][i]) {\n          check++;\n          if (check == size) return true;\n        }\n        else {\n          check = 0;\n          break;\n        }\n      }\n    }\n    \n    if (col === size - row - 1) {\n      for (let i = 0; i < size; i++) {\n        if (curr === boardArray[i][size - i - 1]) {\n          check++;\n          if (check == size) return true;\n        }\n        else {\n          check = 0;\n          break;\n        }\n      }\n    }\n    \n    return false;\n  }\n\n  function displayWinner() {\n    setPlayerState(\"Winner\");\n  }\n  \n  function resetBoard() {\n    setBoardArray(temp);\n    setPlayer(\"X\");\n    setPlayerState(\"Current\");\n  }\n\n  return(\n    <div>\n      <h3>{playerState} : {player}</h3>\n      {Array(3).fill(null).map( (_,i) => (\n        <Row rowNum={i} rowArray={boardArray[i]} onClick={handleclick} />\n      ))}\n\n      <button onClick={resetBoard}>New Game</button>\n    </div>\n  );\n}\n\n//i = row, j = col\nfunction Row({rowNum, rowArray, onClick}) {\n  return (\n    <div className=\"board-row\">\n      {Array(3).fill(null).map( (_,i) =>\n        <Square rowNum={rowNum} colNum={i} value={rowArray[i]} onClick={onClick} />\n      )}\n    </div>\n  );\n}\n\nfunction Square({rowNum, colNum, value, onClick}) {\n  return (\n    <button className=\"square\" onClick={() => onClick(rowNum, colNum)}>\n      {value}\n    </button>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}